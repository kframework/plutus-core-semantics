(program

(module Foo (imported) (exported () ()) (local () ())
  (define result
    (case (con Nat.Foo 3)
          (Nat.NotThisOne ()    -1)
          (Nat.NotThisTwo ()    -2)
          (Nat.NotThisThree (y) -3)
          (Nat.NotThisFour  (y)  -4)
          (Nat.Foo (x) (builtin multiplyInteger x 30))
          (Nat.NotThisFive ()  -6))))

)
