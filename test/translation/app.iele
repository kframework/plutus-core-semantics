contract App {

  define @dispatch(%closure, %param) {
    %fptr = load %closure

    %cond = cmp eq %fptr, 1
    br %cond, label1

    %cond = cmp eq %fptr, 2
    br %cond, label2

    label2:
      call @fresh2(%closure, %param)

    label1:
      call @fresh1(%closure, %param)
  }

  define @init() {
    %alloc_counter_ptr = 0
    store 1, %alloc_counter_ptr
  }

  define @alloc() {
    %alloc_counter_ptr = 0
    %alloced = load %alloc_counter_ptr
    %ret = %alloced
    %alloced = add %size, %alloced
    store %alloced, %alloc_counter_ptr
    ret %ret
  }

  define @app() {
    %ret = call @alloc(1)
    store 1, %ret
    ret %ret
  }

  define @fresh1(%f) {
    %ret = call @alloc(2)
    store 2, %ret
    %fresh3 = add %ret, 1
    store %f, %fresh3
    ret %ret
  }

  define @fresh2(%env, %x) {
    %addr = add %env, 0
    %fresh5 = load %addr
    %ret = call @dispatch(%fresh5, %x)
    ret %ret
  }

}