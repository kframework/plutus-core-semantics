(program

(module Foo (imported) (exported () ()) (local () ())

(define sum
  (lam n (lam s
    (case (builtin equalsInt n 0)
      (Prelude.True () s)
      (Prelude.False ()
          [Foo.sum (builtin subtractInt n 1) (builtin addInt n s)])))))

// (define result [Foo.sum 10 0])

)

)